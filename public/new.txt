async function blogCommentHandler(event) {
  event.preventDefault();

  const comment_text = document.querySelector('input[name="comment-body"]').value;

  const postId = document.querySelector('input[name="post-id"]').value;
  
  console.log(comment_text, 'line 10');
  
  console.log(postId, "line 12");

  if (comment_text) {
    const response = await fetch('/api/comments', {
      method: 'POST',
      body: JSON.stringify({
        postId,
        comment_text
      }),
      headers: {
        'Content-Type': 'application/json'
      }
    });

    if (response.ok) {
      console.log( "Reloading..." );
      document.location.reload();
    } else {
      alert(response.statusText);
      document.querySelector('#comment-form').style.display = "block";
    }
  }
}

// document.querySelector('#addBlogComment').addEventListener('click', blogCommentHandler);
document.querySelector('#save-comment-form').addEventListener('submit', blogCommentHandler);

From Joey Gaitan (TA) to Everyone:  10:28 PM

// Adding a new comment:
router.post('/', withAuth, (req, res) => {
  if (req.session) {
    BlogComment.create({
      blog_comment: req.body.comment_text,
      post_id: req.body.postId,
      user_id: req.session.user_id,
    })
    .then(dbCommentData => {
      res.json(dbCommentData)
    })
    .catch(err => {
      console.log(err);
      res.status(400).json(err);
    })
  }
});

//////////////////////////////////////////////

{{> blogpostdetail post}}

{{> comments post.blog_comments}}

{{#if loggedIn}}
<div class="card">
  <h3 class="card-header"></h3>
  <form class="card-body comment-form" id="save-comment-form">

    <input type="hidden" name="post-id" value="{{post.id}}" />

    <label class="form-label">Add your comment:</label>
    <input id="comment" name="comment-body" class="form-input" />

    {{!-- <button type="button" class="btn" id="addBlogComment">Submit</button> --}}
    <button type="submit" class="btn">Save Comment</button>

  </form>
</div>
<script src="/js/comment.js"></script>
{{/if}}


async function blogCommentHandler(event) {
  event.preventDefault();

  const comment_text = document.querySelector('input[name="comment-body"]').value;

  const postId = document.querySelector('input[name="post-id"]').value;
  
  console.log(comment_text, 'line 10');

  console.log(postId, "line 12");

  if (comment_text) {
    const response = await fetch('/api/comments', {
      method: 'POST',
      body: JSON.stringify({
        postId,
        comment_text
      }),
      headers: {
        'Content-Type': 'application/json'
      }
    });

    if (response.ok) {
      console.log( "Reloading..." );
      document.location.reload();
    } else {
      alert(response.statusText);
      document.querySelector('#comment-form').style.display = "block";
    }
  }
}

// document.querySelector('#addBlogComment').addEventListener('click', blogCommentHandler);
document.querySelector('#save-comment-form').addEventListener('submit', blogCommentHandler);


// Adding a new comment:
router.post('/', withAuth, (req, res) => {
  if (req.session) {
    BlogComment.create({
      blog_comment: req.body.comment_text,
      post_id: req.body.postId,
      user_id: req.session.user_id,
    })
    .then(dbCommentData => {
      res.json(dbCommentData)
    })
    .catch(err => {
      console.log(err);
      res.status(400).json(err);
    })
  }
});

